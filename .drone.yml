---
kind: pipeline
name: e2e-kubernetes-1.16

platform:
  os: linux
  arch: amd64

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.3.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: custom-cluster-116
      pipeline_id: cluster-116
      local_kind_config_path: katalog/tests/harbor/config/kind-config
      cluster_version: '1.16.9'
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-setup
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.4.0_1.16.4_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-116
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/setup.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-clair
    image: docker:dind
    pull: always
    volumes:
    - name: shared
      path: /shared
    - name: dockersock
      path: /var/run/docker.sock
    depends_on: [ e2e-setup ]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-116
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/clair.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-chartmuseum
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.4.0_1.16.4_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ e2e-setup ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-116
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/chartmuseum.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-replication
    image: quay.io/sighup/e2e-testing:1.1.0_0.1.3_2.16.1_1.4.0_1.16.3_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ e2e-setup ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-116
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/replication.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-registry
    image: docker:dind
    pull: always
    volumes:
    - name: shared
      path: /shared
    - name: dockersock
      path: /var/run/docker.sock
    depends_on: [ e2e-setup ]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-116
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/registry.sh
      - bats -t katalog/tests/harbor/registry-notary.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.3.0
    pull: always
    depends_on: [ e2e-clair, e2e-chartmuseum, e2e-replication, e2e-registry ]
    settings:
      action: destroy
      pipeline_id: cluster-116
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}
- name: dockersock
  host:
    path: /var/run/docker.sock
---
kind: pipeline
name: e2e-kubernetes-1.15

platform:
  os: linux
  arch: amd64

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.3.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: custom-cluster-115
      pipeline_id: cluster-115
      local_kind_config_path: katalog/tests/harbor/config/kind-config
      cluster_version: '1.15.11'
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-setup
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.4.0_1.15.7_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-115
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/setup.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-clair
    image: docker:dind
    pull: always
    volumes:
    - name: shared
      path: /shared
    - name: dockersock
      path: /var/run/docker.sock
    depends_on: [ e2e-setup ]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-115
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/clair.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-chartmuseum
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.4.0_1.15.7_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ e2e-setup ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-115
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/chartmuseum.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-replication
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.4.0_1.15.7_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ e2e-setup ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-115
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/replication.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-registry
    image: docker:dind
    pull: always
    volumes:
    - name: shared
      path: /shared
    - name: dockersock
      path: /var/run/docker.sock
    depends_on: [ e2e-setup ]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-115
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/registry.sh
      - bats -t katalog/tests/harbor/registry-notary.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.3.0
    pull: always
    depends_on: [ e2e-clair, e2e-chartmuseum, e2e-replication, e2e-registry ]
    settings:
      action: destroy
      pipeline_id: cluster-115
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}
- name: dockersock
  host:
    path: /var/run/docker.sock
---
kind: pipeline
name: e2e-kubernetes-1.14

platform:
  os: linux
  arch: amd64

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.3.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: custom-cluster-114
      pipeline_id: cluster-114
      local_kind_config_path: katalog/tests/harbor/config/kind-config
      cluster_version: '1.14.10'
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-setup
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.4.0_1.14.10_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-114
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/setup.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-clair
    image: docker:dind
    pull: always
    volumes:
    - name: shared
      path: /shared
    - name: dockersock
      path: /var/run/docker.sock
    depends_on: [ e2e-setup ]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-114
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/clair.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-chartmuseum
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.4.0_1.14.10_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ e2e-setup ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-114
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/chartmuseum.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-replication
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.4.0_1.14.10_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ e2e-setup ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-114
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/replication.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-registry
    image: docker:dind
    pull: always
    volumes:
    - name: shared
      path: /shared
    - name: dockersock
      path: /var/run/docker.sock
    depends_on: [ e2e-setup ]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-114
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - bats -t katalog/tests/harbor/registry.sh
      - bats -t katalog/tests/harbor/registry-notary.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.3.0
    pull: always
    depends_on: [ e2e-clair, e2e-chartmuseum, e2e-replication, e2e-registry ]
    settings:
      action: destroy
      pipeline_id: cluster-114
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}
- name: dockersock
  host:
    path: /var/run/docker.sock
