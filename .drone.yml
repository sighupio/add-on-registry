# Copyright (c) 2022 SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

name: license
kind: pipeline
type: docker

steps:
  - name: check
    image: docker.io/library/golang:1.16
    pull: always
    commands:
      - go get -u github.com/google/addlicense
      - addlicense -c "SIGHUP s.r.l" -v -l bsd --check .
---
name: policeman
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

depends_on:
  - license

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      # Identifies false positives like missing 'selector'.
      # Doing this is valid for Kustomize patches
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # Some duplicated code is intended.
      VALIDATE_JSCPD: "false"
      # hadolint already validated dockerfiles
      VALIDATE_DOCKERFILE: "false"
      # Disable natural language checks
      VALIDATE_NATURAL_LANGUAGE: "false"
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/harbor/distributions/full-harbor > distribution.yml

  - name: check-deprecated-apis
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect distribution.yml --ignore-deprecations --target-versions=k8s=v1.20.0,harbor=v2.7.0
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect distribution.yml --ignore-deprecations --target-versions=k8s=v1.21.0,harbor=v2.7.0
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect distribution.yml --ignore-deprecations --target-versions=k8s=v1.22.0,harbor=v2.7.0
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect distribution.yml --ignore-deprecations --target-versions=k8s=v1.23.0,harbor=v2.7.0
      # adding preemtive check for Kubernetes 1.24 without blockin the CI to have a list of unspported APIs in use.
      - /pluto detect distribution.yml --ignore-deprecations --ignore-removals --target-versions=k8s=v1.24.0,harbor=v2.7.0

---
name: e2e-kubernetes-1.18
kind: pipeline
type: docker

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

node:
  runner: internal

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0-final-aws
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-118
      pipeline_id: cluster-118
      local_kind_config_path: katalog/tests/harbor/config/kind-config
      cluster_version: "1.18.19"
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-setup
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.18.19_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-118
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/setup.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-vulns
    image: docker:dind
    pull: always
    volumes:
      - name: shared
        path: /shared
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-118
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/vulns.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-chartmuseum
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.18.19_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-118
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/chartmuseum.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-replication
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.18.19_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-118
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/replication.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-registry
    image: docker:dind
    pull: always
    volumes:
      - name: shared
        path: /shared
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-118
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/registry.sh
      - bats -t katalog/tests/harbor/registry-notary.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0-final-aws
    pull: always
    depends_on: [e2e-vulns, e2e-chartmuseum, e2e-replication, e2e-registry]
    settings:
      action: destroy
      pipeline_id: cluster-118
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: e2e-kubernetes-1.19
kind: pipeline
type: docker

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0-final-aws
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-119
      pipeline_id: cluster-119
      local_kind_config_path: katalog/tests/harbor/config/kind-config
      cluster_version: "1.19.11"
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-setup
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.19.11_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-119
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/setup.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-vulns
    image: docker:dind
    pull: always
    volumes:
      - name: shared
        path: /shared
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-119
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/vulns.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-chartmuseum
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.19.11_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-119
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/chartmuseum.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-replication
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.19.11_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-119
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/replication.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-registry
    image: docker:dind
    pull: always
    volumes:
      - name: shared
        path: /shared
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-119
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/registry.sh
      - bats -t katalog/tests/harbor/registry-notary.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0-final-aws
    pull: always
    depends_on: [e2e-vulns, e2e-chartmuseum, e2e-replication, e2e-registry]
    settings:
      action: destroy
      pipeline_id: cluster-119
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: e2e-kubernetes-1.20
kind: pipeline
type: docker

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0-final-aws
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-120
      pipeline_id: cluster-120
      local_kind_config_path: katalog/tests/harbor/config/kind-config
      cluster_version: "1.20.7"
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-setup
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-120
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/setup.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-vulns
    image: docker:dind
    pull: always
    volumes:
      - name: shared
        path: /shared
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-120
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/vulns.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-chartmuseum
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-120
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/chartmuseum.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-replication
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-120
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/replication.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-registry
    image: docker:dind
    pull: always
    volumes:
      - name: shared
        path: /shared
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-120
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/registry.sh
      - bats -t katalog/tests/harbor/registry-notary.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0-final-aws
    pull: always
    depends_on: [e2e-vulns, e2e-chartmuseum, e2e-replication, e2e-registry]
    settings:
      action: destroy
      pipeline_id: cluster-120
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: e2e-kubernetes-1.21
kind: pipeline
type: docker

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0-final-aws
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-121
      pipeline_id: cluster-121
      local_kind_config_path: katalog/tests/harbor/config/kind-config
      cluster_version: "1.21.1"
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-setup
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.21.1_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-121
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/setup.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-vulns
    image: docker:dind
    pull: always
    volumes:
      - name: shared
        path: /shared
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-121
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/vulns.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-chartmuseum
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.21.1_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-121
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/chartmuseum.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-replication
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.21.1_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-121
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/replication.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: e2e-registry
    image: docker:dind
    pull: always
    volumes:
      - name: shared
        path: /shared
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      DYNAMIC_DNS_SERVICE:
        from_secret: dynamic_dns_service
    depends_on: [e2e-setup]
    commands:
      - apk add curl jq git bash ca-certificates
      - git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
      - cd /tmp/bats-core
      - git checkout v1.1.0
      - ./install.sh /usr/local
      - cd -
      - export KUBECONFIG=/shared/kube/kubeconfig-121
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export EXTERNAL_DNS="$INSTANCE_IP.$DYNAMIC_DNS_SERVICE"
      - bats -t katalog/tests/harbor/registry.sh
      - bats -t katalog/tests/harbor/registry-notary.sh
    when:
      ref:
        include:
          - refs/tags/**

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.11.0-final-aws
    pull: always
    depends_on: [e2e-vulns, e2e-chartmuseum, e2e-replication, e2e-registry]
    settings:
      action: destroy
      pipeline_id: cluster-121
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: release
kind: pipeline
type: docker

depends_on:
  - e2e-kubernetes-1.18
  - e2e-kubernetes-1.19
  - e2e-kubernetes-1.20
  - e2e-kubernetes-1.21

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [clone]
    commands:
      - tar -zcvf fury-kubernetes-registry-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [clone]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-registry-${DRONE_TAG}.tar.gz
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-registry-${DRONE_TAG}.tar.gz
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
