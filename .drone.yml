# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

name: license
kind: pipeline
type: docker

clone:
  depth: 1

steps:
  - name: check
    image: docker.io/library/golang:1.20
    pull: always
    commands:
      - go install github.com/google/addlicense@v1.1.1
      - addlicense -c "SIGHUP s.r.l" -v -l bsd --check .

---
name: policeman
kind: pipeline
type: docker

clone:
  depth: 1

platform:
  os: linux
  arch: amd64

depends_on:
  - license

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      # Identifies false positives like missing 'selector'.
      # Doing this is valid for Kustomize patches
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # Some duplicated code is intended.
      VALIDATE_JSCPD: "false"
      # hadolint already validated dockerfiles
      VALIDATE_DOCKERFILE: "false"
      # Disable natural language checks
      VALIDATE_NATURAL_LANGUAGE: "false"
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_3.12.0_1.31.1_3.10.0_4.33.3
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/harbor/distributions/full-harbor > distribution.yml

  - name: check-deprecated-apis
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect distribution.yml --ignore-deprecations --target-versions=k8s=v1.28.0
      - /pluto detect distribution.yml --ignore-deprecations --target-versions=k8s=v1.29.0
      - /pluto detect distribution.yml --ignore-deprecations --target-versions=k8s=v1.30.0
      - /pluto detect distribution.yml --ignore-deprecations --target-versions=k8s=v1.31.0

---
name: e2e-kubernetes-1.28
kind: pipeline
type: docker

depends_on:
  - policeman

clone:
  depth: 1

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: create-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    pull: always
    depends_on:
      - clone
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      KIND_CONFIG: ./katalog/tests/harbor/config/kind-config
      CLUSTER_VERSION: v1.28.0
      KUBECONFIG: kubeconfig-harbor-v1.28.0
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-harbor-v1.28.0
    commands:
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config $${KIND_CONFIG}
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}

  - name: e2e-setup
    image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.12.0_1.9.4_1.29.1_3.5.3_4.33.3
    pull: always
    network_mode: host
    environment:
      KUBECONFIG: kubeconfig-harbor-v1.28.0
      EXTERNAL_DNS: "127.0.0.1.nip.io"
    depends_on:
      - create-kind-cluster
    commands:
      - until kubectl get serviceaccount default > /dev/null 2>&1; do echo "waiting for control-plane" && sleep 1; done
      - bats -t katalog/tests/harbor/setup.sh

  - name: e2e-vulns
    image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.12.0_1.9.4_1.29.1_3.5.3_4.33.3
    pull: always
    network_mode: host
    environment:
      KUBECONFIG: kubeconfig-harbor-v1.28.0
    depends_on:
      - e2e-setup
    commands:
      - bats -t katalog/tests/harbor/vulns.sh

  - name: e2e-chartmuseum
    image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.12.0_1.9.4_1.29.1_3.5.3_4.33.3
    pull: always
    network_mode: host
    environment:
      KUBECONFIG: kubeconfig-harbor-v1.28.0
    depends_on:
      - e2e-setup
    commands:
      - bats -t katalog/tests/harbor/chartmuseum.sh

  - name: e2e-replication
    image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.12.0_1.9.4_1.29.1_3.5.3_4.33.3
    pull: always
    network_mode: host
    environment:
      KUBECONFIG: kubeconfig-harbor-v1.28.0
    depends_on:
      - e2e-setup
    commands:
      - bats -t katalog/tests/harbor/replication.sh

  - name: e2e-registry
    image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.12.0_1.9.4_1.29.1_3.5.3_4.33.3
    pull: always
    network_mode: host
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      KUBECONFIG: kubeconfig-harbor-v1.28.0
    depends_on:
      - e2e-setup
    commands:
      - bats -t katalog/tests/harbor/registry.sh
      - bats -t katalog/tests/harbor/registry-notary.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-harbor-v1.28.0
    commands:
      - kind delete cluster --name $${CLUSTER_NAME} || true
    depends_on:
      - e2e-vulns
      - e2e-chartmuseum
      - e2e-replication
      - e2e-registry
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: release
kind: pipeline
type: docker

depends_on:
  - e2e-kubernetes-1.28

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [clone]
    commands:
      - tar -zcvf fury-kubernetes-registry-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [clone]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-registry-${DRONE_TAG}.tar.gz
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-registry-${DRONE_TAG}.tar.gz
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
